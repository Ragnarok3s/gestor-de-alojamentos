function createNoopMiddleware() {
  return function noop(req, res, next) {
    if (typeof next === 'function') next();
  };
}

function createApp() {
  const app = function () {};
  app.locals = {};
  const register = () => app;
  app.use = register;
  ['get', 'post', 'put', 'delete', 'patch', 'all', 'options', 'head'].forEach(method => {
    app[method] = register;
  });
  app.listen = function (port, cb) {
    if (typeof cb === 'function') cb();
    return { close() {} };
  };
  app.set = function () { return app; };
  app.engine = function () { return app; };
  app.disable = function () { return app; };
  app.enable = function () { return app; };
  return app;
}

function express() {
  return createApp();
}

express.Router = function () {
  const router = createApp();
  return router;
};

express.json = function () {
  return createNoopMiddleware();
};

express.urlencoded = function () {
  return createNoopMiddleware();
};

express.static = function () {
  return createNoopMiddleware();
};

module.exports = express;
