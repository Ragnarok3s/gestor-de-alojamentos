class Worksheet {
  constructor(name) {
    this.name = name;
    this.rows = [];
  }

  addRow(values = []) {
    const rowValues = Array.isArray(values) ? values.slice() : [values];
    this.rows.push(rowValues);
    return rowValues;
  }

  eachRow(callback) {
    this.rows.forEach((rowValues, index) => {
      const row = {
        values: [null, ...rowValues],
      };
      callback(row, index + 1);
    });
  }
}

class Workbook {
  constructor() {
    this.worksheets = [];
    const self = this;
    this.xlsx = {
      load(buffer) {
        self._buffer = buffer;
        return Promise.resolve(self);
      },
      readFile() {
        return Promise.resolve(self);
      },
      writeFile() {
        return Promise.resolve();
      },
    };
  }

  getWorksheet(name) {
    return this.worksheets.find(ws => ws.name === name) || null;
  }

  addWorksheet(name) {
    const sheet = new Worksheet(name);
    this.worksheets.push(sheet);
    return sheet;
  }
}

module.exports = {
  Workbook,
};
