<style data-table-styles>
  .bo-data-table { display: grid; gap: 1.5rem; }
  .bo-data-table__controls { display: flex; flex-wrap: wrap; gap: 1rem; align-items: flex-end; }
  .bo-data-table__search, .bo-data-table__filter { display: grid; gap: 0.35rem; min-width: 220px; }
  .bo-data-table__filters { display: flex; flex-wrap: wrap; gap: 1rem; }
  .bo-data-table__label { font-size: 0.75rem; font-weight: 600; text-transform: uppercase; letter-spacing: 0.06em; color: #64748b; }
  .bo-data-table__submit { height: 40px; padding-inline: 1.5rem; }
  .bo-data-table__table { width: 100%; border-collapse: collapse; font-size: 0.9rem; background: rgba(255, 255, 255, 0.85); border-radius: 1rem; overflow: hidden; }
  .bo-data-table__table thead { background: #f8fafc; color: #475569; }
  .bo-data-table__header { padding: 0.75rem 1rem; text-align: left; font-size: 0.75rem; font-weight: 600; text-transform: uppercase; letter-spacing: 0.08em; }
  .bo-data-table__header.is-right { text-align: right; }
  .bo-data-table__header.is-center { text-align: center; }
  .bo-data-table__header.is-actions { text-align: right; }
  .bo-data-table__sort { display: inline-flex; align-items: center; gap: 0.4rem; color: inherit; text-decoration: none; }
  .bo-data-table__sort:hover { color: #0f172a; }
  .bo-data-table__sort.is-active { color: #0f172a; }
  .bo-data-table__row:nth-child(even) { background: rgba(248, 250, 252, 0.75); }
  .bo-data-table__row:hover { background: rgba(224, 231, 255, 0.35); }
  .bo-data-table__cell { padding: 1rem; vertical-align: top; color: #1f2937; }
  .bo-data-table__cell.is-right { text-align: right; }
  .bo-data-table__cell.is-center { text-align: center; }
  .bo-data-table__value { display: block; font-weight: 600; color: #0f172a; }
  .bo-data-table__muted { display: block; font-size: 0.75rem; color: #64748b; margin-top: 0.15rem; }
  .bo-data-table__badge { display: inline-flex; align-items: center; gap: 0.25rem; border-radius: 999px; padding: 0.2rem 0.75rem; font-size: 0.75rem; font-weight: 600; text-transform: uppercase; letter-spacing: 0.08em; background: #e2e8f0; color: #475569; }
  .bo-data-table__badge.is-success { background: rgba(16, 185, 129, 0.15); color: #047857; }
  .bo-data-table__badge.is-warning { background: rgba(251, 191, 36, 0.18); color: #b45309; }
  .bo-data-table__badge.is-danger { background: rgba(248, 113, 113, 0.18); color: #b91c1c; }
  .bo-data-table__badge.is-muted { background: rgba(148, 163, 184, 0.18); color: #475569; }
  .bo-data-table__actions { display: inline-flex; flex-wrap: wrap; gap: 0.5rem; justify-content: flex-end; }
  .bo-data-table__action { display: inline-flex; align-items: center; gap: 0.4rem; padding: 0.45rem 0.9rem; border-radius: 999px; font-size: 0.78rem; font-weight: 600; background: #e2e8f0; color: #1e293b; text-decoration: none; border: none; cursor: pointer; transition: background 0.2s, color 0.2s, box-shadow 0.2s; }
  .bo-data-table__action:hover { background: #cbd5f5; color: #0f172a; }
  .bo-data-table__action.is-ghost { background: rgba(241, 245, 249, 0.8); color: #1e293b; }
  .bo-data-table__action.is-ghost:hover { background: rgba(226, 232, 240, 0.9); }
  .bo-data-table__action.is-primary { background: #2563eb; color: #f8fafc; }
  .bo-data-table__action.is-primary:hover { background: #1d4ed8; }
  .bo-data-table__action.is-danger { background: rgba(248, 113, 113, 0.22); color: #b91c1c; }
  .bo-data-table__action.is-danger:hover { background: rgba(248, 113, 113, 0.35); }
  .bo-data-table__action > i { width: 1rem; height: 1rem; }
  .bo-data-table__empty { text-align: center; padding: 2.5rem 1rem; color: #64748b; font-size: 0.9rem; }
  .bo-data-table__pagination { display: flex; flex-wrap: wrap; align-items: center; justify-content: space-between; gap: 0.75rem; padding: 0.75rem 0; border-top: 1px solid rgba(148, 163, 184, 0.35); }
  .bo-data-table__pagination-label { font-size: 0.78rem; color: #64748b; }
  .bo-data-table__pagination-actions { display: inline-flex; align-items: center; gap: 0.6rem; }
  .bo-data-table__page-link { display: inline-flex; align-items: center; gap: 0.35rem; font-size: 0.78rem; font-weight: 600; color: #1d4ed8; text-decoration: none; }
  .bo-data-table__page-link:hover { text-decoration: underline; }
  .bo-data-table__page-link.is-disabled { color: #94a3b8; cursor: not-allowed; text-decoration: none; }
  .bo-data-table__page-counter { font-size: 0.78rem; color: #475569; }
  @media (max-width: 768px) {
    .bo-data-table__controls { flex-direction: column; align-items: stretch; }
    .bo-data-table__filters { flex-direction: column; }
    .bo-data-table__table thead { display: none; }
    .bo-data-table__table tbody, .bo-data-table__table tr, .bo-data-table__table td { display: block; width: 100%; }
    .bo-data-table__table tr { margin-bottom: 1rem; border: 1px solid rgba(148, 163, 184, 0.25); border-radius: 1rem; overflow: hidden; }
    .bo-data-table__cell { display: grid; gap: 0.25rem; padding: 0.85rem 1rem; border-bottom: 1px solid rgba(148, 163, 184, 0.15); }
    .bo-data-table__cell::before { content: attr(data-label); font-size: 0.7rem; font-weight: 600; text-transform: uppercase; color: #94a3b8; letter-spacing: 0.08em; }
    .bo-data-table__actions { justify-content: flex-start; }
  }
</style>
<section class="bo-data-table" data-table-root id="__TABLE_ID__">
  <!--TABLE_CONTROLS-->
  <div class="responsive-table">
    <table class="bo-data-table__table">
      <thead>
        <tr><!--TABLE_HEADERS--></tr>
      </thead>
      <tbody>
        <!--TABLE_ROWS-->
      </tbody>
    </table>
  </div>
  <!--TABLE_PAGINATION-->
  <!--TABLE_FOOTER-->
</section>
<!--TABLE_MODALS-->
<script data-table-runtime>
  (function(){
    if (window.__boDataTableInit) return;
    window.__boDataTableInit = true;

    function openModal(modal) {
      if (!modal) return;
      const dialog = modal.querySelector('[data-modal-dialog]');
      const backdrop = modal.querySelector('[data-modal-backdrop]');
      if (dialog) {
        dialog.hidden = false;
        dialog.removeAttribute('hidden');
        dialog.classList.add('is-open');
        setTimeout(() => dialog.focus(), 10);
      }
      if (backdrop) {
        backdrop.hidden = false;
        backdrop.removeAttribute('hidden');
      }
      modal.classList.add('is-open');
    }

    function closeModal(modal) {
      if (!modal) return;
      const dialog = modal.querySelector('[data-modal-dialog]');
      const backdrop = modal.querySelector('[data-modal-backdrop]');
      if (dialog) {
        dialog.hidden = true;
        dialog.setAttribute('hidden', '');
        dialog.classList.remove('is-open');
      }
      if (backdrop) {
        backdrop.hidden = true;
        backdrop.setAttribute('hidden', '');
      }
      modal.classList.remove('is-open');
    }

    document.addEventListener('click', event => {
      const trigger = event.target.closest('[data-confirm-trigger]');
      if (!trigger) return;
      const modalId = trigger.getAttribute('data-confirm-trigger');
      if (!modalId) return;
      const modal = document.querySelector(`[data-modal-id="${CSS.escape(modalId)}"]`);
      if (!modal) return;
      event.preventDefault();
      openModal(modal);
    });

    document.addEventListener('click', event => {
      const closeBtn = event.target.closest('[data-modal-close]');
      if (closeBtn) {
        const modal = closeBtn.closest('[data-modal-root]');
        closeModal(modal);
        return;
      }
      const backdrop = event.target.closest('[data-modal-backdrop]');
      if (backdrop) {
        closeModal(backdrop.closest('[data-modal-root]'));
      }
    });

    document.addEventListener('keydown', event => {
      if (event.key !== 'Escape') return;
      document.querySelectorAll('[data-modal-root].is-open').forEach(modal => closeModal(modal));
    });

    document.addEventListener('click', event => {
      const confirmBtn = event.target.closest('[data-confirm-accept]');
      if (!confirmBtn) return;
      const modalId = confirmBtn.getAttribute('data-confirm-modal');
      if (modalId) {
        const modal = document.querySelector(`[data-modal-id="${CSS.escape(modalId)}"]`);
        closeModal(modal);
      }
      const actionId = confirmBtn.getAttribute('data-confirm-accept');
      const fireId = confirmBtn.getAttribute('data-confirm-fire');
      if (fireId) {
        const actionEl = document.querySelector(`[data-action-id="${CSS.escape(fireId)}"]`);
        if (actionEl) {
          const table = actionEl.closest('[data-table-root]');
          if (table) {
            table.dispatchEvent(new CustomEvent('datatable:action', {
              bubbles: true,
              detail: {
                actionId: fireId,
                action: actionEl.getAttribute('data-action') || '',
                rowId: actionEl.getAttribute('data-row-id') || '',
                dataset: { ...actionEl.dataset },
                confirmed: true
              }
            }));
          }
        }
      }
    });

    document.addEventListener('click', event => {
      const actionBtn = event.target.closest('[data-table-action]');
      if (!actionBtn) return;
      if (actionBtn.hasAttribute('data-confirm-trigger')) return;
      const table = actionBtn.closest('[data-table-root]');
      if (!table) return;
      table.dispatchEvent(new CustomEvent('datatable:action', {
        bubbles: true,
        detail: {
          actionId: actionBtn.getAttribute('data-action-id') || '',
          action: actionBtn.getAttribute('data-action') || '',
          rowId: actionBtn.getAttribute('data-row-id') || '',
          dataset: { ...actionBtn.dataset },
          originalEvent: event
        }
      }));
    });
  })();
</script>
